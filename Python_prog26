import numpy as np
# Function to create a 1D array from user input
def create_1d_array():
    length = int(input("Enter the number of elements for the 1D array: "))
    array_1d = list(map(int, input(f"Enter {length} elements separated by spaces: ").split()))
    if len(array_1d) != length:
        print(f"Warning: Expected {length} elements, but received {len(array_1d)}. Adjusting input.")
        array_1d = array_1d[:length]

    return np.array(array_1d)
# Function to create a 2D array from user input
def create_2d_array():
    rows = int(input("Enter the number of rows for the 2D array: "))
    cols = int(input("Enter the number of columns for the 2D array: "))
array_2d = []
    print("Enter the elements row-wise, separated by spaces:")

    for i in range(rows):
        row = list(map(int, input(f"Row {i+1}: ").split()))
        if len(row) != cols:
            print(f"Warning: Expected {cols} columns, but received {len(row)}. Adjusting input.")
            row = row[:cols]
        array_2d.append(row)
    return np.array(array_2d)
# Function to create a 3D array from user input
def create_3d_array():
    depth = int(input("Enter the number of matrices (depth) for the 3D array: "))
    rows = int(input("Enter the number of rows for each matrix: "))
    cols = int(input("Enter the number of columns for each matrix: "))

    array_3d = []
    print("Enter the elements for each matrix row-wise, separated by spaces:")

    for d in range(depth):
        print(f"\nMatrix {d+1}:")
        matrix = []
        for r in range(rows):
            row = list(map(int, input(f"Row {r+1}: ").split()))
            if len(row) != cols:
                print(f"Warning: Expected {cols} columns, but received {len(row)}. Adjusting input.")
                row = row[:cols]
            matrix.append(row)
        array_3d.append(matrix)
    return np.array(array_3d)
# Create and display 1D array
array_1d = create_1d_array()
print("\n1D Array:")
print(array_1d)
print("Number of dimensions (ndim):", array_1d.ndim)
print("Shape of array (shape):", array_1d.shape)
print("Size of array (size):", array_1d.size)
print("Data type of array elements (dtype):", array_1d.dtype)
print()
# Create and display 2D array
array_2d = create_2d_array()
print("\n2D Array:")
print(array_2d)
print("Number of dimensions (ndim):", array_2d.ndim)
print("Shape of array (shape):", array_2d.shape)
print("Size of array (size):", array_2d.size)
print("Data type of array elements (dtype):", array_2d.dtype)
print()

# Create and display 3D array
array_3d = create_3d_array()
print("\n3D Array:")
print(array_3d)
print("Number of dimensions (ndim):", array_3d.ndim)
print("Shape of array (shape):", array_3d.shape)
print("Size of array (size):", array_3d.size)
print("Data type of array elements (dtype):", array_3d.dtype)
